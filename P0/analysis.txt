Task0.py
For the printing of the first record, the complexity: O(1)
For the printing of the last record, the complexity is also:  O(1)
Result: O(1) + O(1) = O(1)


Task1.py
Create set: O(1)
Loop through call array: O(N)
Add sender and receiver number to set: O(1) x 2
Loop through text array: O(N)
Add sender and receiver number to set: O(1) x 2
Get Length of set: O(1)
Result: O(6N + 2) = O(N)

Task2.py
Create dictionary: O(1)
Loop through calls and text array: O(N)
if in dict statement: O(1)
add create element in dict: O(1)
If in dict statement: O(1)
add create element in dict: O(1)
Assign two variables: O(1) x 2
Loop through dictionary: O(N)
if statement: O(1)
Assign variables: O(1) x 2
Result: 3 + O(N + 4) + O(N + 3) = O(N)    

Task3.py
Part A
Create set, two other variables: O(1) X 3
Iterate through calls array: O(N)
Check if calling number code is from bangalore: O(1)
Increment: O(1)
If bangalore call found get code of receiving number: O(1)
Check if receiving number has bang code: O(1)
Increment: O(1)
Add code to set: O(1)
Sort the set: O(N log N)
Print the set O(N)
Result: O(8N + 3) + O(N LOG N) = O(N LOG N)


Task4.py
Create outgoing_numbers set: O(1)
Loop through calls: O(N)
Add call to outgoing_numbers set: O(1)
Loop through calls array: O(N)
if statement check if call is in set: O(N)
Remove number from set: O(1)
Loop through text array: O(N)
if statement check if text sender number is in set: O(N)
Remove number from set: O(1)
if statement check if text receiver number is in set: O(N)
Remove number from set: O(1)
Sort outgoing_numbers set(the final set will never be larger than N): O(N LOG N)  
Loop outgoing_numbers set: O(N)
Result: 1 + O(N + 1) + O(N * N + 1) + O(N * 2N + 2) + O(N LOG N) + O(N) =  O(N2)    


References:
https://www.ics.uci.edu/~pattis/ICS-33/lectures/complexitypython.txt
